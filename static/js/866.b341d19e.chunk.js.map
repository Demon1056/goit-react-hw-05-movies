{"version":3,"file":"static/js/866.b341d19e.chunk.js","mappings":"4PAEaA,EAAOC,EAAAA,GAAAA,KAAH,+JASJC,EAAaD,EAAAA,GAAAA,OAAH,4UA6BVE,EAAYF,EAAAA,GAAAA,MAAH,oQ,kBCtCTG,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,OACE,+BACE,UAACL,EAAD,CACEM,SAAU,SAAAC,GACR,IAAIC,EAAQD,EAAEE,OAAO,GAAGD,MACxBD,EAAEG,iBACFL,EAAaG,GACRA,GACHG,EAAAA,OAAAA,KAAY,sCAEdJ,EAAEE,OAAO,GAAGD,MAAQ,EACrB,EATH,UAWG,KACD,SAACL,EAAD,KACA,SAACD,EAAD,CAAYU,KAAK,SAAjB,wBAIP,E,6CC2BD,EAzCe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMV,EAAK,UAAGM,EAAaK,IAAI,eAApB,QAA+B,IAE1CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gGAESZ,EAFT,uBAGMU,EAAc,MAHpB,iCAMIG,EAAAA,QAAAA,OAAe,CAAEC,SAAU,eAN/B,UAO6BC,EAAAA,EAAAA,IAAmBf,GAPhD,OAQ8B,KADpBgB,EAPV,QAQmBC,QACbd,EAAAA,OAAAA,QAAe,6BAEjBO,EAAcM,GAXlB,kDAaIE,QAAQC,QAbZ,yBAeIN,EAAAA,QAAAA,SAfJ,8EADc,uBAAC,WAAD,wBAoBdO,EACD,GAAE,CAACpB,IAOJ,OACE,iCACE,yCACA,SAACJ,EAAD,CAAUC,aARY,SAAAwB,GAExBd,EAD4B,KAATc,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,IAMIZ,IAAc,SAACa,EAAA,EAAD,CAAUb,WAAYA,MAG1C,C","sources":["components/Form/FormStyles.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\npadding:2px;\nmargin-top:5px;\ndisplay: flex;\nalign-items: center;\nmax-width: 320px;\nborder: 2px solid black;\nborder-radius: 3px;\n`;\nexport const FormButton = styled.button`\n  \ndisplay: inline-block;\nbackground-color: rosybrown;\n\n  width: 65px;\n  height: 25px;\n  border: 4px;\n  opacity: 1;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border: 1px solid black;\n  border-radius: 3px;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n// export const SearchFormButtonLabel = styled.span`\n//   position: absolute;\n//   width: 1px;\n//   height: 1px;\n//   padding: 0;\n//   overflow: hidden;\n//   clip: rect(0, 0, 0, 0);\n//   white-space: nowrap;\n//   clip-path: inset(50%);\n//   border: 0;\n// `;\nexport const FormInput = styled.input` \n\ndisplay: inline-block;\n  margin-right: 5px;\n  width: 100%;\n  font: inherit;\n  font-size: 17px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\nborder: 1px solid rosybrown;\n  border-radius: 3px;\n`;","import { Form, FormButton, FormInput } from './FormStyles';\nimport { Notify } from 'notiflix';\nexport const FindForm = ({ handleChange }) => {\n  return (\n    <>\n      <Form\n        onSubmit={e => {\n          let value = e.target[0].value;\n          e.preventDefault();\n          handleChange(value);\n          if (!value) {\n            Notify.info('Please enter the name of the movie');\n          }\n          e.target[0].value = '';\n        }}\n      >\n        {' '}\n        <FormInput />\n        <FormButton type=\"submit\">Search</FormButton>\n      </Form>\n    </>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { FindForm } from 'components/Form/Form';\nimport { useEffect, useState } from 'react';\nimport { requestSearchFilms } from 'Api';\nimport { FilmList } from 'components/FilmList/FilmList';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmsNames, setFilmsNames] = useState(null);\n  const value = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    async function updateFilmsNames() {\n      try {\n        if (!value) {\n          setFilmsNames(null);\n          return;\n        }\n        Loading.arrows({ svgColor: ' rosybrown' });\n        const filmsArray = await requestSearchFilms(value);\n        if (filmsArray.length === 0) {\n          Notify.failure(\"We didn't find any movies\");\n        }\n        setFilmsNames(filmsArray);\n      } catch (error) {\n        console.error();\n      } finally {\n        Loading.remove();\n      }\n    }\n\n    updateFilmsNames();\n  }, [value]);\n\n  const updateQueryString = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <h2>Find movies</h2>\n      <FindForm handleChange={updateQueryString} />\n      {filmsNames && <FilmList filmsNames={filmsNames} />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Form","styled","FormButton","FormInput","FindForm","handleChange","onSubmit","e","value","target","preventDefault","Notify","type","useSearchParams","searchParams","setSearchParams","useState","filmsNames","setFilmsNames","get","useEffect","Loading","svgColor","requestSearchFilms","filmsArray","length","console","error","updateFilmsNames","name","FilmList"],"sourceRoot":""}