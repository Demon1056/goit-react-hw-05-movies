{"version":3,"file":"static/js/573.cff35748.chunk.js","mappings":"uQAAaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAQlE,OACE,2BACG,KACD,gBAAKC,IAAG,yCAAoCN,GAAeO,IAAKN,KAChE,4BACE,0BACGA,EADH,KACYC,EADZ,QAGA,wCAAgBC,EAAhB,SACA,qCACA,mBACA,uBAAIC,KACJ,mCACA,mBACA,uBAnBY,SAAAC,GAEhB,OADoBA,EAAOG,KAAI,qBAAGC,IAAH,IACZC,KAAK,KACzB,CAgBSC,CAAUN,UAIrB,E,SCxBYO,EAAiB,SAAC,GAAsB,IAC3CC,EAD0C,EAAnBd,aACvBc,GACFC,GAAWC,EAAAA,EAAAA,MACjB,OACE,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,EAAb,SAAwBI,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA9D,qBAIF,yBACE,SAAC,KAAD,CACEF,GAAE,kBAAaH,EAAb,YACFI,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAFhC,4BAUT,E,SCkBD,EArCqB,WAAO,IAAD,IACzB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOpB,EAAP,KAAqBqB,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAQ,qBADGR,EAAAA,EAAAA,MACSE,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiBzC,OAfAM,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIC,EAAAA,QAAAA,OAAe,CAAEC,SAAU,eAF/B,UAG0BC,EAAAA,EAAAA,IAAqBN,GAH/C,OAGUO,EAHV,OAIIR,EAAgBQ,GAJpB,gDAMIC,QAAQC,QANZ,yBAQIL,EAAAA,QAAAA,SARJ,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,CAACV,KAGF,iCACE,SAAC,KAAD,CAASL,GAAIO,EAAb,qBACCxB,IACC,2BACG,KACD,SAACD,EAAD,CAAaC,aAAcA,KAC3B,SAACa,EAAD,CAAgBb,aAAcA,KAC9B,SAAC,EAAAiC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/MainDatails/MainDatails.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export const MainDatails = ({ filmsDatails }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    filmsDatails;\n\n  const getGenres = genres => {\n    const filmsGenres = genres.map(({ name }) => name);\n    return filmsGenres.join(', ');\n  };\n\n  return (\n    <div>\n      {' '}\n      <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n      <div>\n        <h3>\n          {title} ({release_date})\n        </h3>\n        <p>User Score: {vote_average} %</p>\n        <p>Overview</p>\n        <br />\n        <p>{overview}</p>\n        <p>Genres</p>\n        <br />\n        <p>{getGenres(genres)}</p>\n      </div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const AdditionalInfo = ({ filmsDatails }) => {\n  const { id } = filmsDatails;\n  const location = useLocation();\n  return (\n    <div>\n      <h3>Additional Information</h3>\n      <ul>\n        <li>\n          <Link to={`/movies/${id}/cast`} state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${id}/reviews`}\n            state={{ from: location.state.from }}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { NavItem } from 'components/Layout/LayoutStyled';\nimport { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { requestMoviesDatails } from 'Api';\nimport { MainDatails } from 'components/MainDatails/MainDatails';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nconst MovieDetails = () => {\n  const [filmsDatails, setFilmsDatails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function updateFilmsDatails() {\n      try {\n        Loading.arrows({ svgColor: ' rosybrown' });\n        const details = await requestMoviesDatails(movieId);\n        setFilmsDatails(details);\n      } catch (error) {\n        console.error();\n      } finally {\n        Loading.remove();\n      }\n    }\n    updateFilmsDatails();\n  }, [movieId]);\n\n  return (\n    <>\n      <NavItem to={backLink}>Go back</NavItem>\n      {filmsDatails && (\n        <div>\n          {' '}\n          <MainDatails filmsDatails={filmsDatails} />\n          <AdditionalInfo filmsDatails={filmsDatails} />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["MainDatails","filmsDatails","poster_path","title","release_date","vote_average","overview","genres","src","alt","map","name","join","getGenres","AdditionalInfo","id","location","useLocation","to","state","from","useState","setFilmsDatails","movieId","useParams","backLink","useEffect","Loading","svgColor","requestMoviesDatails","details","console","error","updateFilmsDatails","Suspense","fallback"],"sourceRoot":""}